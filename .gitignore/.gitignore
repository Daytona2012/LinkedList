/**
 * @author Daytona Dayne
 *
 */
package linkedlist;

import java.util.LinkedList;

public class linkedListUS<D, T extends Comparable<T>> {
	
	// Properties
	Node<D> head;
	int count;
	
	//Constructors
	/*public linkedList() {
		head = null;
		count = 0;
	}*/
	
	public linkedListUS(Node<D> newHead) {
		head = newHead;
		count = 1;
	}
	
	//Methods
	
	//add
	public void add(int newData) {
		Node<D> temp = new Node(newData);
		Node<D> current = head;
		while(current.getNext() != null) {
			current = current.getNext();
		}
		current.setNext(temp);
		count++;
	}
	
	//get
	public D get(int index) {
		//if (index <= 0) {
			//return -1;
		//}
		Node<D> current = head;
		for (int i = 1; i < index; i++) {
			current = current.getNext();
		}
		return current.getData();
	}
	
	//size
	public int size() {
		return count;
	}
	
	//isEmpty
	public boolean isEmpty() {
		return head == null;
	}
	
	//remove
	public void remove() {
		//remove from back of list 
		Node<D> current = head;
		while (current.getNext().getNext() != null) {
			current.getNext();
		}
		current.setNext(null);
		count--;
	}
	
	public static void main(String[] args) {
		LinkedList<String> linkedList = new LinkedList<String>();
		linkedList.add("Alice");
		System.out.println(linkedList);
		linkedList.add("Alicey");
		System.out.println(linkedList);
	}
	
}
